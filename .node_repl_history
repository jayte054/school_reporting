for (let i = 0; i <size.length; i++) {
let catalogue = []
let size = [1,2,3,4,5]
let arr= [1,2,3,4,5,6]
clear
let arr = [1,2,3,4,5,6]
grade
solve()
)}}
grade.push(scores[i] + scores[i+1]
for (let i = 0; i < scores.length; i+=2) {
solve = () => {
let grade = []
return i}
grading = () => {
(grading () => {
(grading() => {})
let scores = [2,3,4,5,6,7]
arr2
arr
sum()
)}}
arr2.push(arr[i] + arr[i+1]
for (let i = 0; i <arr.length; i+=2) {
let sum = () => {
}}
arr2.push(arr[i] + arr[i+1])
for (let i = 0; i < arr.length; i++) {
}}
arr2.push(arr[i] + arr[i+2]
for (let i = 0; i < arr.length; i++) {
push = () => {
let arr2 = []
sum
replace()
}}
sum += arr[i]
for (let i = 0; i < arr.length; i++) {
let sum = 0
replace = () => {
arr1.toString().replace("hello", "world")
arr1.toString()
arr1 = ["hello"]
arr
}
arr.replace(arr[i],arr[i] + arr[i+1])
for (let i = 0; i < arr.length; i+=2) {
let arr = [2,3,4,5,6]
.exit
for (let i = 0; i <arr.length; i++) {
.clear
let arr1 = []
clear
let arr = [2,3,4,5,6]
greet()
courtesy()
courtesty()
courtesy = () => "hello world"
greet
"hello"
greet = () => 
.exit
node nodeP.js
'./code'
code
const code = require("./code")
.exit
clear
process
touch code.js
.exit
console.log(b)}
b += a
a++
while (a < 3) {
let b = 0
let a = 0
a = 0
while (a < 3) {
.exit
exit
b = 0
a = 0
while (a < 3) {
clear
c
return "combination of " + b.atom + " and " + b.element + " has its uses}
let c= b.map(function () {
b
return b.atom + " is  essential to life, but combination of " + b.element + "can be disastrous and that's " + b.statement}
b.map(function () {
b
b.statement = true}
if (1+1 === 2) {
b
b.element = "carbo" + "hydrogen"
b
b.element = "hydrogen" & "carbon"
b
b.atom = "oxygen"
let b = {}
a
A
let a = 1+ 2
$ gh auth login
[surname, name] = [name, surname]
surname = "Ewelike"
name = "Nora"
[b,a] = [a,b]
b = 2
a = 1
node index.js
C:\User\Owner\Desktop\js-basics>node index.js
node index.js
js-basics>
js-basics>node index.js
js-basics
html.js
index.js
js-basics $
js-basics
node index.js
js-basics $node index.js
$node index.js
node index.js